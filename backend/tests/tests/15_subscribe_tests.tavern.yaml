test_name: Subscribe tests

includes:
  - !include encoded_images.yaml

stages:
  - name: 1 - Register test admin
    request:
      url: "{url}/auth/register/admin"
      method: POST
      json:
        name: "Admin"
        surname: "Admin"
        school: "1561"
        building: "11"
        login: "admin"
        password: "Test12345"
    response:
      status_code: 201
      json:
        user_id: !anything
        name: "Admin"
        surname: "Admin"
        school: "1561"
        building: "11"
        login: "admin"
      save:
        json:
          author_id: user_id
          author_login: login

  - name: 2 - Register test client
    request:
      url: "{url}/auth/register/client"
      method: POST
      json:
        name: "User"
        surname: "User"
        school: "1561"
        building: "11"
        login: "user"
        password: "Test12345"
    response:
      status_code: 201
      json:
        user_id: !anything
        name: "User"
        surname: "User"
        school: "1561"
        building: "11"
        login: "user"
      save:
        json:
          author_client_id: user_id
          author_client_login: login

  - name: 3 - Login admin
    request:
      url: "{url}/auth/login"
      method: POST
      json:
        login: "admin"
        password: "Test12345"
    response:
      status_code: 200
      json:
        access_token: !anything
      headers:
        Set-Cookie: !anything
      save:
        $ext:
          function: helpers:get_refresh_token
          extra_kwargs:
            cookie_name: "refresh_token_cookie"
        json:
          access_token: access_token

  - name: 4 - Login client
    request:
      url: "{url}/auth/login"
      method: POST
      json:
        login: "user"
        password: "Test12345"
    response:
      status_code: 200
      json:
        access_token: !anything
      headers:
        Set-Cookie: !anything
      save:
        $ext:
          function: helpers:get_refresh_token
          extra_kwargs:
            cookie_name: "refresh_token_cookie"
        json:
          access_token_client: access_token

  - name: 4.1 - Create news post with tags as admin
    request:
      url: "{url}/posts/create/post"
      method: POST
      headers:
        Authorization: "Bearer {access_token}"
      json:
        title: "Test News Post"
        type: "news"
        content: "Test content"
        short_content: "short content"
        start_date: 2217628800
        end_date: 2218060800
        post_img: "{post_image}"
        post_img_detail: "{post_image}"
        tags: ["Новости", "Объявления"]
    response:
      status_code: 201
      json:
        post_id: !anything
        title: "Test News Post"
        short_content: "short content"
        full_content: "Test content"
        image_url: !re_match "^http://.*$"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
        created_at: !anything
        tags: ["Новости", "Объявления"]
      save:
        json:
          news_post_id: post_id

  - name: 4.2 - Create wallpaper post with tags as client
    request:
      url: "{url}/posts/create/wallpapers"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        title: "Test Wallpaper Post"
        type: "wallpapers"
        content: "Test content"
        short_content: "short content"
        post_img: "{post_image}"
        post_img_detail: "{post_image}"
        tags: ["Объявления"]
    response:
      status_code: 201
      json:
        post_id: !anything
        title: "Test Wallpaper Post"
        short_content: "short content"
        full_content: "Test content"
        image_url: !re_match "^http://.*$"
        type: "wallpapers"
        status: "draft"
        author:
          id: "{author_client_id}"
          login: "{author_client_login}"
        created_at: !anything
        tags: ["Объявления"]
      save:
        json:
          wallpaper_post_id: post_id

  - name: 4.3 - Send wallpaper post to moderation
    request:
      url: "{url}/user/{wallpaper_post_id}/send/to/moderation"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
    response:
      status_code: 204

  - name: 4.4 - Apply moderation for wallpaper post
    request:
      url: "{url}/admin/moderation/{wallpaper_post_id}/apply"
      method: POST
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 204

  - name: 4.5 - Create another news post with tags as admin
    request:
      url: "{url}/posts/create/post"
      method: POST
      headers:
        Authorization: "Bearer {access_token}"
      json:
        title: "Test News Post 2"
        type: "news"
        content: "Test content 2"
        short_content: "short content 2"
        start_date: 2217628800
        end_date: 2218060800
        post_img: "{post_image}"
        post_img_detail: "{post_image}"
        tags: ["Новости"]
    response:
      status_code: 201
      json:
        post_id: !anything
        title: "Test News Post 2"
        short_content: "short content 2"
        full_content: "Test content 2"
        image_url: !re_match "^http://.*$"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
        created_at: !anything
        tags: ["Новости"]

  - name: 5 - Subscribe to tags
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        tags: ["Новости", "Объявления"]
    response:
      status_code: 200
      json:
        message: "subscription was successful"

  - name: 6 - Subscribe to authors
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        authors: ["{author_login}"]
    response:
      status_code: 200
      json:
        message: "subscription was successful"

  - name: 7 - Subscribe to both tags and authors
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        tags: ["Новости"]
        authors: ["{author_login}"]
    response:
      status_code: 200
      json:
        message: "subscription was successful"

  - name: 8 - Subscribe without auth
    request:
      url: "{url}/user/subscribe"
      method: POST
      json:
        tags: ["Новости"]
    response:
      status_code: 401

  - name: 9 - Subscribe with invalid token
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer invalid_token"
      json:
        tags: ["Новости"]
    response:
      status_code: 401

  - name: 10 - Subscribe to non-existent tags
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        tags: ["НесуществующийТег"]
    response:
      status_code: 400

  - name: 11 - Subscribe to non-existent authors
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        authors: ["non_existent"]
    response:
      status_code: 400

  - name: 12 - Subscribe to non-existent authors and valid tags
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        authors: [ "non_existent" ]
        tags: ["Новости"]
    response:
      status_code: 400

  - name: 13 - Subscribe to non-existent tags and valid author
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        authors: [ "1561" ]
        tags: ["НесуществующийТег"]
    response:
      status_code: 400

  - name: 14 - Subscribe with empty request
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json: {}
    response:
      status_code: 400

  - name: 15 - Subscribe with empty tags
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        tags: []
    response:
      status_code: 400

  - name: 14 - Subscribe with empty author
    request:
      url: "{url}/user/subscribe"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        authors: []
    response:
      status_code: 400

  - name: 16 - Get user subscriptions
    request:
      url: "{url}/user/subscribe"
      method: GET
      headers:
        Authorization: "Bearer {access_token_client}"
    response:
      status_code: 200
      json:
        subscriptions:
          tags: ["Новости"]
          authors: ["{author_login}"]

  - name: 17 - Get subscriptions without auth
    request:
      url: "{url}/user/subscribe"
      method: GET
    response:
      status_code: 401

  - name: 18 - Get subscriptions with invalid token
    request:
      url: "{url}/user/subscribe" 
      method: GET
      headers:
        Authorization: "Bearer invalid_token"
    response:
      status_code: 401