test_name: Posts statistics tests

stages:
  - name: 1 - Register test admin
    request:
      url: "{url}/auth/register/admin"
      method: POST
      json:
        name: "Admin"
        surname: "Admin"
        school: "1561"
        building: "11"
        login: "admin"
        password: "Test12345"
        avatar_img: "image"
    response:
      status_code: 201
      json:
        user_id: !anything
        name: "Admin"
        surname: "Admin"
        school: "1561"
        building: "11"
        login: "admin"
        avatar_img: "image"
    save:
      json:
        author_id: user_id
        author_login: login
        author_img: avatar_img

  - name: 2 - Register test client
    request:
      url: "{url}/auth/register/client"
      method: POST
      json:
        name: "User"
        surname: "User"
        school: "1561"
        building: "11"
        login: "user"
        password: "Test12345"
        avatar_img: "image"
    response:
      status_code: 201
      json:
        user_id: !anything
        name: "User"
        surname: "User"
        school: "1561"
        building: "11"
        login: "user"
        avatar_img: "image"
    save:
      json:
        author_client_id: user_id
        author_client_login: login
        author_client_img: avatar_img

  - name: 3 - Login admin
    request:
      url: "{url}/auth/login"
      method: POST
      json:
        login: "admin"
        password: "Test12345"
    response:
      status_code: 200
      json:
        access_token: !anything
      headers:
        Set-Cookie: !anything
    save:
      $ext:
        function: helpers:get_refresh_token
        extra_kwargs:
          cookie_name: "refresh_token"
      json:
        access_token: access_token

  - name: 4 - Login client
    request:
      url: "{url}/auth/login"
      method: POST
      json:
        login: "user"
        password: "Test12345"
    response:
      status_code: 200
      json:
        access_token: !anything
      headers:
        Set-Cookie: !anything
    save:
      $ext:
        function: helpers:get_refresh_token
        extra_kwargs:
          cookie_name: "refresh_token_user"
      json:
        access_token_client: access_token

  - name: 5 - Create news post as admin
    request:
      url: "{url}/create/post"
      method: POST
      headers:
        Authorization: "Bearer {access_token}"
      json:
        title: "Test News Post"
        type: "news"
        content: "Test content"
        short_content: "short content"
        start_date: 1744110904
        end_date: 1749381304
        post_img: "image poster"
        post_img_detail: "detail image"
    response:
      status_code: 201
      json:
        post_id: !anything
        title: "Test News Post"
        short_content: "short content"
        full_content: "Test content"
        start_date: 1744110904
        end_date: 1749381304
        img_url: "image poster"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
          avatar_url: "{author_img}"
        created_at: !anything
    save:
      json:
        news_post_id: post_id

  - name: 6 - Create wallpaper post as client
    request:
      url: "{url}/create/post"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        title: "Test Wallpaper Post"
        type: "wallpapers"
        content: "Test content"
        short_content: "short content"
        start_date: 1744110904
        end_date: 1749381304
        post_img: "image poster"
        post_img_detail: "detail image"
    response:
      status_code: 201
      json:
        post_id: !anything
        title: "Test Wallpaper Post"
        short_content: "short content"
        full_content: "Test content"
        start_date: 1744110904
        end_date: 1749381304
        img_url: "image poster"
        type: "wallpapers"
        status: "draft"
        author:
          id: "{author_client_id}"
          login: "{author_client_login}"
          avatar_url: "{author_client_img}"
        created_at: !anything
    save:
      json:
        wallpaper_post_id: post_id

  - name: 7 - Like news post as client
    request:
      url: "{url}/posts/{news_post_id}/like"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
    response:
      status_code: 200
      json:
        message: "Post liked successfully"

  - name: 8 - Get general statistics as admin
    request:
      url: "{url}/statistics"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        total_posts: 2
        most_active_user:
          id: "{author_id}"
          login: "{author_login}"
          post_count: 1
        likes: 1
        views: 0
        joined: 0
        conversion: 0

  - name: 9 - Get post statistics as admin
    request:
      url: "{url}/statistics/{news_post_id}"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        likes: 1
        views: 0
        joined: 0
        conversion: 0

  - name: 10 - Get statistics as client (should fail)
    request:
      url: "{url}/statistics"
      method: GET
      headers:
        Authorization: "Bearer {access_token_client}"
    response:
      status_code: 403

  - name: 11 - Get statistics without auth
    request:
      url: "{url}/statistics"
      method: GET
    response:
      status_code: 401

  - name: 12 - Get statistics with invalid token
    request:
      url: "{url}/statistics"
      method: GET
      headers:
        Authorization: "Bearer invalid_token"
    response:
      status_code: 401

  - name: 13 - Get statistics for non-existent post
    request:
      url: "{url}/statistics/00000000-0000-0000-0000-000000000000"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404

  - name: 14 - Get statistics with invalid UUID format
    request:
      url: "{url}/statistics/invalid-uuid"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404

  - name: 15 - Create another news post as admin
    request:
      url: "{url}/create/post"
      method: POST
      headers:
        Authorization: "Bearer {access_token}"
      json:
        title: "Test News Post 2"
        type: "news"
        content: "Test content"
        short_content: "short content"
        start_date: 1744110904
        end_date: 1749381304
        post_img: "image poster"
        post_img_detail: "detail image"
    response:
      status_code: 201
      json:
        post_id: !anything
        title: "Test News Post 2"
        short_content: "short content"
        full_content: "Test content"
        start_date: 1744110904
        end_date: 1749381304
        img_url: "image poster"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
          avatar_url: "{author_img}"
        created_at: !anything
    save:
      json:
        news_post_id_2: post_id

  - name: 16 - Like second news post as client
    request:
      url: "{url}/posts/{news_post_id_2}/like"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
    response:
      status_code: 200
      json:
        message: "Post liked successfully"

  - name: 17 - Verify updated general statistics
    request:
      url: "{url}/statistics"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        total_posts: 3
        most_active_user:
          id: "{author_id}"
          login: "{author_login}"
          post_count: 2
        likes: 2
        views: 0
        joined: 0
        conversion: 0

  - name: 18 - Verify updated post statistics
    request:
      url: "{url}/statistics/{news_post_id_2}"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        likes: 1
        views: 0
        joined: 0
        conversion: 0

  - name: 19 - View news post as client
    request:
      url: "{url}/posts/{news_post_id}"
      method: GET
      headers:
        Authorization: "Bearer {access_token_client}"
    response:
      status_code: 200
      json:
        post_id: "{news_post_id}"
        title: "Test News Post"
        short_content: "short content"
        full_content: "Test content"
        start_date: 1744110904
        end_date: 1749381304
        img_url: "image poster"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
          avatar_url: "{author_img}"
        created_at: !anything

  - name: 20 - Verify post views increased
    request:
      url: "{url}/statistics/{news_post_id}"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        likes: 1
        views: 1
        joined: 0
        conversion: 0

  - name: 21 - Join news post as client
    request:
      url: "{url}/posts/{news_post_id}/join"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
    response:
      status_code: 204

  - name: 22 - Verify post joined increased
    request:
      url: "{url}/statistics/{news_post_id}"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        likes: 1
        views: 1
        joined: 1
        conversion: 100

  - name: 23 - View same post again (views should not increase)
    request:
      url: "{url}/posts/{news_post_id}"
      method: GET
      headers:
        Authorization: "Bearer {access_token_client}"
    response:
      status_code: 200
      json:
        post_id: "{news_post_id}"
        title: "Test News Post"
        short_content: "short content"
        full_content: "Test content"
        start_date: 1744110904
        end_date: 1749381304
        img_url: "image poster"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
          avatar_url: "{author_img}"
        created_at: !anything

  - name: 24 - Verify views remained same
    request:
      url: "{url}/statistics/{news_post_id}"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        likes: 1
        views: 1
        joined: 1
        conversion: 100

  - name: 25 - Join same post again (should fail)
    request:
      url: "{url}/posts/{news_post_id}/join"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
    response:
      status_code: 204

  - name: 26 - Verify joined remained same
    request:
      url: "{url}/statistics/{news_post_id}"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        likes: 1
        views: 1
        joined: 1
        conversion: 100

  - name: 27 - View post as another user (views should increase)
    request:
      url: "{url}/posts/{news_post_id}"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        post_id: "{news_post_id}"
        title: "Test News Post"
        short_content: "short content"
        full_content: "Test content"
        start_date: 1744110904
        end_date: 1749381304
        img_url: "image poster"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
          avatar_url: "{author_img}"
        created_at: !anything

  - name: 28 - Verify views increased for new user
    request:
      url: "{url}/statistics/{news_post_id}"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        likes: 1
        views: 2
        joined: 1
        conversion: 50
  - name: 29 - Verify updated general statistics
    request:
      url: "{url}/statistics"
      method: GET
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        total_posts: 3
        most_active_user:
          id: "{author_id}"
          login: "{author_login}"
          post_count: 2
        likes: 2
        views: 2
        joined: 1
        conversion: 50
