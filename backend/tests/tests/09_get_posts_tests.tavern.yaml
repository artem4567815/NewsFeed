test_name: Get posts tests

includes:
  - !include encoded_images.yaml

stages:
  - name: 1 - Register test admin
    request:
      url: "{url}/auth/register/admin"
      method: POST
      json:
        name: "Admin"
        surname: "Admin"
        school: "1561"
        building: "11"
        login: "admin"
        password: "Test12345"
    response:
      status_code: 201
      json:
        user_id: !anything
        name: "Admin"
        surname: "Admin"
        school: "1561"
        building: "11"
        login: "admin"
      save:
        json:
          author_id: user_id
          author_login: login

  - name: 2 - Register test client
    request:
      url: "{url}/auth/register/client"
      method: POST
      json:
        name: "User"
        surname: "User"
        school: "1561"
        building: "11"
        login: "user"
        password: "Test12345"
    response:
      status_code: 201
      json:
        user_id: !anything
        name: "User"
        surname: "User"
        school: "1561"
        building: "11"
        login: "user"
      save:
        json:
          author_client_id: user_id
          author_client_login: login

  - name: 3 - Login admin
    request:
      url: "{url}/auth/login"
      method: POST
      json:
        login: "admin"
        password: "Test12345"
    response:
      status_code: 200
      json:
        access_token: !anything
      headers:
        Set-Cookie: !anything
      save:
        $ext:
          function: helpers:get_refresh_token
          extra_kwargs:
            cookie_name: "refresh_token_cookie"
        json:
          access_token: access_token

  - name: 4 - Login client
    request:
      url: "{url}/auth/login"
      method: POST
      json:
        login: "user"
        password: "Test12345"
    response:
      status_code: 200
      json:
        access_token: !anything
      headers:
        Set-Cookie: !anything
      save:
        $ext:
          function: helpers:get_refresh_token
          extra_kwargs:
            cookie_name: "refresh_token_cookie"
        json:
          access_token_client: access_token

  - name: 5 - Create test post
    request:
      url: "{url}/posts/create/post"
      method: POST
      headers:
        Authorization: "Bearer {access_token}"
      json:
        title: "Test Post"
        type: "news"
        content: "Test content"
        short_content: "short content"
        start_date: 2217628800
        end_date: 2218060800
        post_img: "{post_image}"
        post_img_detail: "{post_image}"
        tags:
          - "Образование"
          - "Наука"
    response:
      status_code: 201
      json:
        post_id: !anything
        title: "Test Post"
        short_content: "short content"
        full_content: "Test content"
        start_date: 2217628800
        end_date: 2218060800
        image_url: !re_match "^https://.*$"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
        published_at: !anything
        tags:
          - "Образование"
          - "Наука"
      save:
        json:
          post_id1: post_id

  - name: 6 - Create test post №2
    request:
      url: "{url}/posts/create/post"
      method: POST
      headers:
        Authorization: "Bearer {access_token}"
      json:
        title: "Test Post2"
        type: "news"
        content: "Test content2"
        short_content: "short content2"
        start_date: 2217628800
        end_date: 2218060800
        post_img: "{post_image}"
        post_img_detail: "{post_image}"
        tags:
          - "Наука"
    response:
      status_code: 201
      json:
        post_id: !anything
        title: "Test Post2"
        short_content: "short content2"
        full_content: "Test content2"
        start_date: 2217628800
        end_date: 2218060800
        image_url: !re_match "^https://.*$"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
        published_at: !anything
        tags:
          - "Наука"
      save:
        json:
          post_id2: post_id

  - name: 7 - Create test post№3
    request:
      url: "{url}/posts/create/post"
      method: POST
      headers:
        Authorization: "Bearer {access_token}"
      json:
        title: "Test Post3"
        type: "news"
        content: "Test content3"
        short_content: "short content3"
        start_date: 2217628800
        end_date: 2218060800
        post_img: "{post_image}"
        post_img_detail: "{post_image}"
        tags:
          - "Уроки"
    response:
      status_code: 201
      json:
        post_id: !anything
        title: "Test Post3"
        short_content: "short content3"
        full_content: "Test content3"
        start_date: 2217628800
        end_date: 2218060800
        image_url: !re_match "^https://.*$"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
        published_at: !anything
        tags:
          - "Уроки"
      save:
        json:
          post_id3: post_id

  - name: 8 - Create test post№4
    request:
      url: "{url}/posts/create/post"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
      json:
        title: "Test Post4"
        type: "wallpapers"
        content: "Test content4"
        short_content: "short content4"
        start_date: 2217628800
        end_date: 2218060800
        post_img: "{post_image}"
        post_img_detail: "{post_image}"
        tags:
          - "Олимпиада"
    response:
      status_code: 201
      json:
        post_id: !anything
        title: "Test Post4"
        short_content: "short content4"
        full_content: "Test content4"
        start_date: 2217628800
        end_date: 2218060800
        image_url: !re_match "^https://.*$"
        type: "wallpapers"
        status: "draft"
        author:
          id: "{author_client_id}"
          login: "{author_client_login}"
        tags:
          - "Олимпиада"
      save:
        json:
          post_id4: post_id

  - name: 8.1 - Send wallpaper post to moderation
    request:
      url: "{url}/user/{post_id4}/send/to/moderation"
      method: POST
      headers:
        Authorization: "Bearer {access_token_client}"
    response:
      status_code: 204

  - name: 8.2 - Apply moderation for wallpaper post
    request:
      url: "{url}/admin/moderation/{post_id4}/apply"
      method: POST
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 204

  - name: 9 - Get all posts
    request:
      url: "{url}/posts"
      method: GET
    response:
      status_code: 200
      json:
        posts:
          - !anything
          - !anything
          - !anything

  - name: 10 - Get post by ID
    request:
      url: "{url}/posts/{post_id1}"
      method: GET
    response:
      status_code: 200
      json:
        post_id: !anything
        title: "Test Post"
        short_content: "short content"
        full_content: "Test content"
        start_date: 2217628800
        end_date: 2218060800
        image_url: !re_match "^https://.*$"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
        published_at: !anything
        tags:
          - "Образование"
          - "Наука"


  - name: 11 - Get post2 by ID
    request:
      url: "{url}/posts/{post_id2}"
      method: GET
    response:
      status_code: 200
      json:
        post_id: !anything
        title: "Test Post2"
        short_content: "short content2"
        full_content: "Test content2"
        start_date: 2217628800
        end_date: 2218060800
        image_url: !re_match "^https://.*$"
        type: "news"
        status: "published"
        author:
          id: "{author_id}"
          login: "{author_login}"
        published_at: !anything
        tags:
          - "Наука"

  - name: 12 - Get non-existent post
    request:
      url: "{url}/posts/00000000-0000-0000-0000-000000000000"
      method: GET
    response:
      status_code: 404

  - name: 13 - Get posts with invalid pagination
    request:
      url: "{url}/posts"
      method: GET
      params:
        offset: -1
        limit: 0
    response:
      status_code: 400

  - name: 14 - Get posts with invalid pagination
    request:
      url: "{url}/posts"
      method: GET
      params:
        offset: 0
        limit: -1
    response:
      status_code: 400

  - name: 15 - Get posts with filter by type
    request:
      url: "{url}/posts"
      method: GET
      params:
        type: "news"
    response:
      status_code: 200
      json:
        posts:
          - !anything
          - !anything
          - !anything

  - name: 16 - Get posts with filter by type
    request:
      url: "{url}/posts"
      method: GET
      params:
        type: "wallpapers"
    response:
      status_code: 200
      json:
        posts:
          - !anything

  - name: 17 - Get posts with date range filter
    request:
      url: "{url}/posts"
      method: GET
      params:
        start_date: "2217628800"
        end_date: "2218060800"
        type: "wallpapers"
    response:
      status_code: 200
      json:
        posts:
          - !anything

  - name: 18 - Get posts with invalid date range
    request:
      url: "{url}/posts"
      method: GET
      params:
        start_date: "1744243200"
        end_date: "1744070400"
    response:
      status_code: 400

  - name: 19 - Get posts with invalid date format
    request:
      url: "{url}/posts"
      method: GET
      params:
        start_date: "invalid-date"
        end_date: "invalid-date"
    response:
      status_code: 400

  - name: 20 - Get posts with limit
    request:
      url: "{url}/posts"
      method: GET
      params:
        type: "news"
        limit: 2
    response:
      status_code: 200
      json:
        posts:
          - !anything
          - !anything

  - name: 21 - Get posts with offset and limit
    request:
      url: "{url}/posts"
      method: GET
      params:
        type: "news"
        limit: 2
        offset: 1
    response:
      status_code: 200
      json:
        posts:
          - !anything

  - name: 22 - Get posts with tags filter
    request:
      url: "{url}/posts"
      method: GET
      params:
        tags:
          - "Олимпиада"
        type: "wallpapers"
    response:
      status_code: 200
      json:
        posts:
          - !anything

  - name: 23 - Get posts with tags filter№2
    request:
      url: "{url}/posts"
      method: GET
      params:
        tags:
          - "Наука"
    response:
      status_code: 200
      json:
        posts:
          - !anything
          - !anything

  - name: 24 - Get posts with tags filter№3
    request:
      url: "{url}/posts"
      method: GET
      params:
        tags:
          - "Наука"
          - "Образование"
    response:
      status_code: 200
      json:
        posts:
          - !anything

  - name: 25 - Get posts with invalid type
    request:
      url: "{url}/posts"
      method: GET
      params:
        type: "invalid"
    response:
      status_code: 200
      json:
        posts: []

  - name: 26 - Get posts with none tags
    request:
      url: "{url}/posts"
      method: GET
      params:
        tags: [ ]
    response:
      status_code: 200
      json:
        posts:
          - !anything
          - !anything
          - !anything
