version: '3.8'

networks:
  flask-net:
    driver: bridge

volumes:
  app-data:
  pg_data:

services:
  db:
    image: postgres:17
    container_name: my_postgres
    restart: always
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - flask-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      retries: 5

  app:
    image: arttyu/newsfeed:backend
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_school_news
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:8080/ping" ]
      interval: 10s
      retries: 30
      timeout: 3s
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - app-data:/app
    networks:
      - flask-net
    command: ["sh", "/usr/src/app/start.sh"]

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower-backend
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
